/**
 * @description 
 */
Object[] rulefunction RuleFunctions.ECF.AS.getExecutedScnrHistoryByFilter {
	attribute {
		validity = ACTION;
	}
	scope {
		String filter;
	}
	body {
		Object logger = Log.getLogger(ScoreCard.log_control.IMDG_TAG + ":getExecutedScnrHistoryByFilter");
		
		try{
			if(filter == null || filter == "") return null;

			Object[] result = AS.query("/Channels/legacyASChannel/ExecutedScnrHistory", null, "get", "snapshot", "all", 0, 1000, filter);
			return result;

			/*
			Concepts.ECF.SCENARIO.ExecutedScenario[] executedScnrHistory = Concepts.ECF.SCENARIO.ExecutedScenario[result@length]{};
			for(int i = 0; i < result@length; i++) {
				Object[] tuple = result[i];
				String executedScnr = getValueAsString("executedScnrHistory", tuple);
				executedScnrHistory[i] = convertStringToES(executedScnr);
			}
			Log.log(logger, ScoreCard.log_control.IMDG_TAG, "filter:%s, executedScnrHistory Count:%d", filter, result@length);
			return executedScnrHistory;
			*/

		}catch(Exception e){
			Log.log(logger, "Error", "error:" + e);
		}	
		return null;
	}
}