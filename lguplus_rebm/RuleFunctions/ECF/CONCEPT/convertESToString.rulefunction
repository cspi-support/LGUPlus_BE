/**
 * @description 
 */
String rulefunction RuleFunctions.ECF.CONCEPT.convertESToString {
	attribute {
		validity = ACTION;
	}
	scope {
		Concepts.ECF.SCENARIO.ExecutedScenario executedScenario;
	}
	body {
		Object logger = Log.getLogger("convertDSToString");
		
		Object spaceValue = String.createBuffer(2048);

		if(spaceValue != null){
			try{
				String.append(spaceValue, executedScenario.SID);
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.SEQ_ID));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.SCNR_ID));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.CAMP_ID));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.FLOW_ID));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.SEG_ID));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.EVENT_ID));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.CAMP_NAME));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.CAMP_TYPE_CD));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.CAMP_MODE));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.PARAM1));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.PARAM2));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.PARAM3));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.PARAM4));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.PAYLOAD));
				String.append(spaceValue, "," + getSerializedFromString(executedScenario.TARGETING_MODE));
				String.append(spaceValue, "," + getSerializedFromDatetime(executedScenario.LOG_TIMESTAMP, null));
				
				String convertedString = String.convertBufferToString(spaceValue);
				return convertedString;
			}catch(Exception: e){
				Log.log(logger, "Error", "Exception" + e);
				return null;
			}finally{
				String.clearBuffer(spaceValue);
			}
		}		
		
		return null;
	}
}