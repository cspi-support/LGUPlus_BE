/**
 * @description 
 */
Concepts.ECF.SCENARIO.UserActivityTrace rulefunction RuleFunctions.ECF.CONCEPT.convertStringToUAT {
	attribute {
		validity = ACTION;
	}
	scope {
		String extId;
		String data;	
	}
	body {
		if(data == null || data == "") return null;
		
		String[] tokens = String.split2(data, "[,]", -1);
		return Concepts.ECF.SCENARIO.UserActivityTrace.UserActivityTrace(
				extId/*extId String */,
				tokens[0]/*SID String */,
				tokens[1]/*P_SVC_NAME String */,
				tokens[2]/*P_ACT_DESC String */,
				tokens[3]/*P_ACT_START String */,
				tokens[4]/*P_ACT_TGT String */,
				tokens[5]/*P_ACT_TGT_DTL String */,
				tokens[6]/*P_VW_CURR String */,
				tokens[7]/*P_VW_CURR_DTL String */,
				tokens[8]/*P_ACTION_ID String */,
				tokens[9]/*P_MENU_ID String */,
				tokens[10]/*P_CAT_ID String */,
				tokens[11]/*P_ALBUM_ID String */,
				tokens[12]/*P_VW_STATUS String */,
				getDeserializedToDatetime(tokens[13], null)/*P_ACTIVITY_TIME DateTime */,
				getDeserializedToDatetime(tokens[14], null)/*P_RECEIVED_TIME DateTime */,
				getDeserializedToInt(tokens[15])/*P_DURATION int */,
				getDeserializedToInt(tokens[16])/*P_COUNT int */,
				tokens[17]/*C_SVC_NAME String */,
				tokens[18]/*C_ACT_DESC String */,
				tokens[19]/*C_ACT_START String */,
				tokens[20]/*C_ACT_TGT String */,
				tokens[21]/*C_ACT_TGT_DTL String */,
				tokens[22]/*C_VW_CURR String */,
				tokens[23]/*C_VW_CURR_DTL String */,
				tokens[24]/*C_ACTION_ID String */,
				tokens[25]/*C_MENU_ID String */,
				tokens[26]/*C_CAT_ID String */,
				tokens[27]/*C_ALBUM_ID String */,
				tokens[28]/*C_VW_STATUS String */,
				getDeserializedToDatetime(tokens[29], null)/*C_ACTIVITY_TIME DateTime */,
				getDeserializedToDatetime(tokens[30], null)/*C_RECEIVED_TIME DateTime */,
				getDeserializedToInt(tokens[31])/*DURATION int */,
				getDeserializedToInt(tokens[32])/*COUNT int */
				,null); //for concurrent-rtc
	}
}