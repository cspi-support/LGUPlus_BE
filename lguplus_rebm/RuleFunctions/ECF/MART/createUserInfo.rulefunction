/**
 * @description 
 */
Concepts.ECF.SCENARIO.CustomerBasicInfo rulefunction RuleFunctions.ECF.MART.createUserInfo {
	attribute {
		validity = ACTION;
	}
	scope {
		String extId;
		Events.Internal.ActionEvent viewevent;	
	}
	body {
		Object logger = Log.getLogger(ScoreCard.log_control.DB_TAG + ":createUserInfo");

		try{
			Database.setCurrentConnection("/SharedResources/OracleConn.sharedjdbc");
			Database.beginTransaction();
			String cid = "" + Random();
			String ctn = "010" + Random() % 100000000;
			boolean mon_subs = true;
			String mon_subs_s = "Y";
			int tRandom = Random() % 2;
			if(tRandom == 0){
				mon_subs = false;
				mon_subs_s = "N";
			}

			String subscribeInfo = null;
			String[] monthlyInfo = String[]{"월정액1", "월정액2,월정액3", "월정액4", "월정액5", "월정액6,월정액7,월정액8", "월정액9"};
			if(mon_subs){
				int index = Random() % 6;
				subscribeInfo = monthlyInfo[index];
			}
			String[] names = String[]{"아무개", "홍길동", "슈퍼맨", "스파이더맨", "배트맨", "아쿠아맨", "원더우먼"};
			int nIndex = Random() % 7;
			String name = names[nIndex];
			String classValue = "I";
			if(Random() % 2 == 0){
				classValue = "G";
			}

			double value = Math.random();
			String tvalue = "" + System.currentTimeMillis();
			String query = "INSERT into LGUPLUS.CUSTOMER_BASIC_INFO(ENTR_NO, CUST_NO, CTN, NAME, MON_SUBS, SUBSCRIBE_INFO, CLASS, UNSUB_CANDI) Values (?,?,?,?,?,?,?,?)";

			Object[] insObj = {viewevent.SID, cid, ctn, name, mon_subs_s, subscribeInfo, classValue, "N"};
			int insertCON = Database.executePreparedStmt(query, insObj);

			return Concepts.ECF.SCENARIO.CustomerBasicInfo.CustomerBasicInfo(
				extId/*extId String */,
				viewevent.SID/*SID String */,
				cid/*CID String */,
				ctn/*CTN String */,
				mon_subs/*MON_SUBS boolean */,
				subscribeInfo/*SUBSCRIBE_INFO String */,
				false/*UNSUB_CANDI boolean */,
				name/*NAME String */,
				classValue/*CLASS String */,
				null/*AVAIL_ET DateTime */,
				viewevent.SeqId/*SEQ_ID String */);

		}catch(Exception e){
			Log.log(logger, "Error", "Exception:"+ e);
			Database.rollback();
			return null;
		}finally{
			Database.unsetConnection();
		}
	}
}