/**
 * @description 
 */
int rulefunction RuleFunctions.ECF.SCENARIO.GetRefs_User_Action {
	attribute {
		validity = CONDITION;
	}
	scope {
		Events.Internal.DetectEvent detectEvent;
		Concepts.ECF.SCENARIO.UserActivityTrace userActivityTrace;	
		Concepts.ECF.SCENARIO.CustomerBasicInfo customerBasicInfo;	
		int days;
	}
	body {
		if(userActivityTrace.COUNT == null) return 0;
		DateTime startTime = null;
		DateTime endTime = null;
		if(days > 0){ // 5 ->  now ~ (now-4)
			String nowString= DateTime.format(DateTime.now(), "yyyyMMdd");
			endTime = DateTime.parseString(nowString, "yyyyMMdd");
			startTime = DateTime.addDay(endTime, -(days-1));
		}
		String[] parsed = getParsedDateRefs(userActivityTrace.COUNT, startTime, endTime);
		
		if(parsed == null) return 0;
		int totalCount = 0;
		for(int i=0; i<parsed@length; i++){
			if(parsed[i] != null){
				totalCount += Number.intValue(String.substring(parsed[i], 6, 7), 10); //yyMMddC
			}
		}
		return totalCount;
	}
}