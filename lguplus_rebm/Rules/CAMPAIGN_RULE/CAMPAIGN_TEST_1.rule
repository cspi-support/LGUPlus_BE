/**
 * @description 
 * @author EdwardMini
 */
rule Rules.CAMPAIGN_RULE.CAMPAIGN_TEST_1 {
	attribute {
		priority = 5;
		forwardChain = true;
	}
	declare {
		Events.Internal.ActionEvent actionEvent;
		Concepts.ECF.SCENARIO.UserActivityTrace userActivityTrace;	
		Concepts.ECF.SCENARIO.CustomerBasicInfo customerBasicInfo;
		Concepts.ECF.SCENARIO.ContentInfo contentInfo;
	}
	when {
		MatchPreCondition(actionEvent, userActivityTrace, customerBasicInfo, contentInfo, "T014");

		/** Matching 예제 
		userActivityTrace.DURATION > 20; // 진입/이탈 사이의 duration(sec)
		IsAlbumCategory_ANY_IN(actionEvent, userActivityTrace, customerBasicInfo, contentInfo, "다시보고싶은 영화,산책용 영화"); // 앨범의 카테고리가 특정 카테고리셋에 포함되는지
		userActivityTrace.CAT_COUNT > 5; //카테고리 매칭 횟수
		userActivityTrace.COUNT > 2; //행동의 횟수
		**/
	}
	then {
		Object logger = Log.getLogger(ScoreCard.log_control.RULE_TAG + "CAMPAIGN_TEST_1");
		Log.log(logger, "Info", "Matched(%d): SID(%s) : SEQ_ID:%s, customerBasicInfo:%s, userActionTrace:%s, count:%d", DateTime.getTimeInMillis(DateTime.now()),actionEvent.SID, actionEvent.SeqId, customerBasicInfo@id, userActivityTrace@id, userActivityTrace.COUNT);
		
		/* 발송 테스트 */
		String scenarioId = "scenario_1234";
		RequestOffer(actionEvent, userActivityTrace, customerBasicInfo, contentInfo, scenarioId);

//		completeCampaign(actionEvent);
	}
}